%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2338c) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1131 427
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1131 427
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: VQLIOS+PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 10/8/16% Copyright 2016 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid1153 putdup 2 /cid1154 putdup 3 /cid1246 putdup 4 /cid1567 putdup 5 /cid1674 putdup 6 /cid1692 putdup 7 /cid1777 putdup 8 /cid1844 putdup 9 /cid1932 putdup 10 /cid2068 putdup 11 /cid2388 putdup 12 /cid2855 putdup 13 /cid2906 putdup 14 /cid3373 putdup 15 /cid4457 putdup 16 /cid4913 putdup 17 /cid5330 putdup 18 /cid5364 putdup 19 /cid5424 putdup 20 /cid5425 putdup 21 /cid5482 putdup 22 /cid5565 putdup 23 /cid6418 putdup 24 /cid6535 putdup 25 /cid6950 putdup 26 /cid7167 putdup 27 /cid7339 putdup 28 /cid43466 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6CE95F52480EDEEB047783E11CBC5D9F27D3FB74FB249F0FE672619DC41966D6890030A615563A0F84831A92C98E09F927299ADF92A39FAA53190A6D4D8C672F27B3C5B1DFF3A345C9F9F370533B35B63BFA95636839FAB52FFD92F314900705962765E762C42D29A38221D6C7A4934109FA9CE43F21F2AC48E1D975344E1134AD281A907095BAB88145E8E8949651C1F395AC5502D459B907445B0FEF8CEA8DF3120704DC61AE1364F7E5607925D741D0F7B8139DA609E65777CED19A66B21BB60072EE9A55E1A9089A8B0A241E97BDC09D77F612CDFBA377BFEA0D048256969E0201AEBE02374B19F67EBED71DECD2DA836C4EF7955A219AFEEB52D6DF3BD38B7CC93EFEB1DC9E79462E0B1CFF469069ADF8069C3A1734FFC7CF0EF9E5A5414F3B9F47B10AADBE59377C06B75DCFB9B253B9D47B0514F3096D12ECF2894243D742CB35E2C23ED6336125B2F79E5334ADBC9B35E4464BC74DA688ECB0425DA9A9EA8514AACD0BA6076E640F4A256977ED508BF363AF16A394C622A4FF6CBE7C2C613CE6E69C4ACAA1F932B1209BF67F412F66E3002B1D7D081E8715AF0AA7F44B78A81ABEB792AD5ABBBC5AB0EE18E2B193AD59F7192150C901B38E5771A435739CFD9B50C38B8F7941053E3EA63D322E4C36FC07E7900403BF6F5E5770351578D4AA6310B4293FEA26EAE6B221657E768507134FD8FC4070B04D582717C7DB923119E7F8DACBD91166FB2A7F7A595B46C43B170A0166C7A65DD46275FB4920E04B6AC3130754D1523BF0BF9DE28BBAAA6312FAA9E52C835DAF2074545AA8EE0EA825B9558B8E46E229BAC17A732E36BBD0943737023C5B38AB3D5EFC2AB057768683BD866B9CAAC8D416E3BC5C0C6CC0A6BF54B0FA8DA9FD39014B480C5E4F304616FB2129459B43C0EF9468C13945451651CB1B97B8271995D7FDBA3B6B0D31A09C9B744DC2ADD00592B10D0D3CCD272E8A5BC5FE54021A591C7F080E606171E18F2F1AECC34021058FC68E48CEFFF3AF517CC71F1F98E361CFF9EA5229C9E0B317BFA3A56089DCC0A838D12DA7C82DFB2A6B9CC3D039686EC0D8A415C286A4BEE53A311D887877219F62FDD9153665F7723726E69109E409A2E14218A69F41A55F3C02B552E122B266834A05E5A79350CA5EEFA294E37A3A0D4661AA5041B32AFEDD52002AD39387BA8114979B36B575FCC9E5FEF71FB1C9814912B35877FECFEF80EE2389B2FED30BC1BF89036D52E2DA4EEEAC89D646B3E4182F8E67487E788659443055965F40C79A22B136A2012E1679CDF9003EA4FBABE172D5254321A6E0D3A6489DB91E3C1405FFF2813F1C9BE52E432D6B8F4528EB15D0AD569F44052B59D5807C52A21CAD494F83278E5BCA4102C133C977F7166BFD7625B80223C2B1DEF9028A4BB895484C52F8FDE92469EDD720D369D0188DA2A2E571286240E2BAE877F4BC18E097D814474F6BACA438D78D06BAA548028D3B96646D36D317AF543CCCC4B14E6D50C8D2FB29B07A7A2A3DF60F97B2C41BD334645A8303C67508B34EE0C2B6EF99C27F2D7858E919F4C9225BF8655A8A23F0E84D639B152BDC99A1EB88FD0A1CD233ACAEB476AB1624884B54CDF742DA8D3108E0B8645A70C5EECD5C22BF211E734A4EBE7368AFE59CF466E21DDEB667023CF908BA4351B45C75AA88D413F03050016897C740D448456E40CACD24B11D69220448E0CF13F5420E88D03E4E3FE3096420E8972D7DCC41BC6C722E071B426B2CBE31EF5672D6A3B22BF42271A525404C2163B00DB0A1CEE755FA3436545FC7E409679771FE1F09A159582A7736670AB172A0B8154E018B65A0644FE901D30A984C283C10E13C4428A5627FFFBC7DEACB6511B87701DF11CC3F1874EF9E172652F12047B221DC38E06755AE7BFA8BD6C5260EF055FAA8C7094EDB0456CEA06C11027A9E96A9CFB726C07289F982DE0C52602A80EDA7BD400DA0726E66335F62161517F0F21FBFD46DAAC345FBF441844D3DA623077148F589C9FBA170B3DA3B35EC3EB00A77C0B6BAAA99336FA1674CE8F14B2355098F174937D681941CA0CEE9191167BB50AE7CB9E06BD0F09F599D2DE9524545676BAD2AF02FB11043B173202E7FC4F37691E2EAF23C57ED3E6A1394932B49568085B976442910009EDB4D0EAD9009B9124B3CCB4EBFCBE2CEB2BB8759384595E7A88E5F68101FE969F99AFB441AFA6EDCF8C3771C2598B0604B1E706EFCD1BB8E5E567A275ED9747A29CCB43F8CD77AA7A15F3AF90E516B094557E1DF01DAA7BADA0CC08B130C0445D53BCE57FBFE56E21FEE6BD1D88B17A795AEF2B92257D9DB9397EB24F2494A5F56EAF1FABD3C7ADC0D7DC4752BD8A98E48AC26258906A18D1185E71C904CCE213D4DF3BF63441DF69767F73DD7DBEE9ECC36660C7B15BA0F199952BA9133FADAB20DE5256AAEA4C0373F1579782492C233FC09E2015B0873E377F00C7E7C01CED707EE1496F10921CC3CF5BD521C7A1F58B2B6A3D394BF52BF641859DB4870430F4310AC0894B76ACCBB7356CF1813B3C0FB5B635DB83F033FC01ACF207294ACBE4773AC05325C2896B9C2F5AB66CF29CEF529E2A768CC969387FACAEFBBE0F763C9B89AD3968395E0C5A7D1620C3949166570FBD1FEDE45FE7EB0992076EC9C9F6AA47A0CC155236A2E9C575E81B698EE59B5469DA3E3E2B41E5C0DCE9EC7FC9A32A38C6804BE8B9916745C4F6482563EFAA55A51B7AE4B96886F3A579632526C2DF1F6526CB827BC08C4EE4FC44B5BC3F8AD755A56543BB8FF4E58CA6394DD4F970686A7CDDB76EBBDA80AC0E8C438EEE461C245BE22795870CC5DBFA81D7FA1B10DC44DD863780C93992D29EA91642BD29B60B136ABED6F627E4F89FEF9F982AD7A9AD63D8EDB216868EBFFAACFB0BE2AFEE85D72A3972D05DE8E011E0A14FCAB3833A0102808DD4ECC7790DCF676F625543BBCF8092EC8A0F326BE2E9A64FE49EFF990D1F582200ACAF3100B551E22F5FEA9EFC7F2C95502FC6825FE26FC440A60E7D9114B994B8EA26FE50AEF9BA3B528665AE7B444B77FC80855498E2E13825C3EDBDFF9088B522C2D9E214C0A4AC3EF9105F8072DB818F3ECA9ABB8AE7C2D323E21010C144099B37E64AD695EE0FEA24DB976393F02E33B7F58E42C813DC6D677D6BBD8826F4AD50F5517DFFAA2604579C9F71751AE03E5800F1B94C17E8916D46C31062D646F643A3B58B377C97A738303AA4F7628FCD9E4F1FEADB6B2B6C0B15D2B9474AB03E2B5A58AC3BB587F67DCC0D09930ECD6640404F97A3E67E54011D9DCF84739EA9AF333685EC88E27D3EBBFC143D242EC395839794ADD93BF40A3EE0E6716554060E3F04EBDB5BF9CDCE68A5589E460206D8A4C408F8BC61D1FE0F94F22B0840FF23ADF04BB61E68A46211DED481410657DEFA0F7D338C216C3FF75E80B7128A09CDC8762E5841559641F14240AAB5C8D57B7819D90B943643F062C71B031247470F4A61CF789DE961CEFAAEA5C58175C4F4EDFDE93550508F38F6ADB8C7C2218733879A75AB4313B888BB1977FA78AFD3442D59F89C7BCD112E7322D09EFA25CE2EE15977489272A327444A586BB59D1EBDF9736D2BEC53BC408DD5ACF5917113D023C9CBB0A74C92E037C5E473E0D60A5EC992E44CA9E522713619694A7D7F481A70378D592A68874D1BC48EC2CF7E32DFEDCE2AFE0401EBE807B748F2BA31512A1514765BF1BC69CCF78ACF3214644D62FF460AA88B433D6E8645A14474C762BC8DFC8B25FB388D4F31ACD30D0A8FF44A179A450CAF7BF42B6BDA6FC1282142BC82F47320D6C0DCB6124E4920491AA372B414C32D71F863C3B0FD75BEB36E9BBF6AEE55FFCAE49AC96DF3631F2FDDD9069BEA6501185EA8E37BCB759EC24DACB41F4E258FAB38FEE09C67331FDF0CFE24639E340E1E5F5CBBE5A3355C9D973A34D11282A88E5DE19B7D6163A87196EBD4B62ADAFF9F712059B1515B51854EC8F24560B3DA33D2D5F4734A1E095B5049570344C05A2412E4DACD5FAD73F785C801FE6282DE0471E0C935C41AD4A2D1D42ABF29870F3A1994B4018CA5A7983A98F2376E0FA161BC7B814F4625DB3919EA3F040F52BECC483DBE2BB979C56DF7F82B3B4B4ECC92AB5E465E9E5D9F360337CA65889346D18A0F7EB41DA5B373869A2E20BC332F3C186D58836B3E90DF2A546BE6DD1D54FA20413F3B78776D3F1A36AAB73CDDC79416887B6D2AE954B4CA2452A73B97FBDCA6CF6EAD957ACDA80D7E6CE799B0D49988B91E5E8579661754FC6304E5676B379CE3FCB455E1B6B61AC2AEDA0DDC6FD352B3AE6B9C2A2F97CA094020DD646E9F2D7FE11102683FA571168B6D13C442136AA82B82C8046500DDF8C7EEAF2134BCC9F3C4AC2B5ACF12EA5BEB24F0E6068ACF114ECC3E91433EB6035BCAD7CF2ECC966A6E778144298A6479C3A8F0A5233AB789576EB1A7F2755B1D8B93173FDD1B26591311D6EF46DF339B63F08269C9749119D07D935936A4AD5CEDD29C15E294E47AAE1F05687CEF05075018CE6ED2000A2519577305AD03061148FBD9432963AF123546ED2AEBE06867DF73F747E4AB0DF97029497B7AF2EB1998F6643190EB66729CFDFA7B2AEEB52D2C2514DD7B54CCFFE40869DADCB198FA7EF18F300D305611575565C254BA1C3EA92C66F9980D754DD0303AF7701586C0C6F213E85B3C1551F145DEE65894FB45B1D3E25CC4F5C9B383D4C578B2F3B2447E99CC1D115EB6B91B3E9F6ACB9C260BD9DC61CDF89BF9F61E6BC29A6361FDC779D7E669A013775C8297D4BA583B404C32CCCF572F556C5327B9FEC7A9B03F0994D50AF1A5EF154A185B4056844A4F693243EDE299701BE93418A5FDAC568FB5F80C3226D233B4171AFA034C4F637EFDE32E0AFD0662EF9AD4D878A306D6BA71FE26B2F95BC1E7E2E575E9B47E3D5698F37A90BCBC62D1F42A5331B31A6CF124A0650A7248923AA3B4AF29898CCED5C3875C1E8E6A4103CCEFB712872612BD398E0EA406175BA524354C354EF175C3E8C3EB018F33683910673BF6D1DBD1A011AF22BF1BAC98E4D9942C2D2FD42016C6DA203704ECEDA7B23623B9BDDC09E7A8FF0696ACD49AFC2F97948289EE3B240781619F4AF1BAE9EF3D8FFE33A714004900B51F6454E974FFA537ECAE1498F709ED25B89767B81A06BF1DCFA714D3DAFF5F6A8800B7C42552316A05A84EA0292B35E368906DCC288F0FE1CA7E5D56FFFED045CEBC0445C361CD4C8946245CA68D93D8BFC57B28ED32A8E8F911885879B73AE45C06EF9A60E78285987B454E31472F5F0FCC6E860532C24CEF98E6489495BEF49BD5EE7D308D1979E9205531E51AC940D553ADE7A5C1EB4DA996C692DF74DD89A127BC002AF09C73038C4510029F56229722EAEC52E11681CACA3ABAAFC6832B12E7862E315A76BB2E371A8CA4DBDCE180F91A5B384CB9E04D6AFBD585755373E13A3EDF0BF93B6166FFEB13EB86106D65685BCA3D2B9FEE8BE02C31EE8AAE2A314FDDB3EAB92249F0860DC3A1B5A3781AE1492BB40F24AC57B9148502D51F28FE500E968872114D16DF4FB04748220E562ABCCFA3D9F47B4EF1F4E61F518CAFD54FDE141E00468C6B811EB163962DEA2490A6DA9A7B767692E9D7C5B01DE5723C8811D02A0A094F8AE7E2627C096865FA662227D82C7731EBA89F3B3EF10D068F2FA29F86750244C4B4BA40DD23F629B8F53894852E111E05FD27CEF6B90855DAE2BEAFA5F4439F7AFF8B971E7EB47456C6BC4B7478D620B683BDD42A64EE3F35BC7CB70E0166AE8847CEEBA57C1B1789C6D3553595752FBADC78457698E1D99CC7E49FE792D57606B009C8D3E1FA5DC18F4C1202759DA5183D335166B54B919266345E011D9513DBE95F5A8CC70B264A170C11964F32C5B0BB9D66BBD0D8B52C889437436945EF2FE9B4A733624945681E3F03724D5B826D11735C8F2DFDDF67BD8B292CB7D3DE93B7E25245940E57345C5B053A3B19D1B3D06E611D21A5696BB2AEBC49CB94FC2014CB5309B85E94BB41F103680A1FF87ADD06433CB8504FF03283C7CF4B79CB3EB821935680ABAEAAD15FCC05EBB638398F146643B716DA3D0EE24ADBA9796556D9767CD3F09335C94DE19F35063D4D03409D14A08E5CDBB59C0C264653BE63FC6085FCABF86AFBF0DBE490C9FC70E99FB38AF69798AEADA894C3D5BA91FFA3762CA9C4D684FA14ECD33CFD2322FBCCB3F644C35458098ACD73AAD5DAEF322FD06D56A0567844CDD1690802FA27DEEAA1A3FD9877236FDE546DB8B871443B63E1314A0955C2F3E942A53D031AA8C1BDBFAAC3483CE1CBC2F52EF094144FF425C5AE3922968CC3195419EF4668583C218A0E5D5E2DB17EB8F9D6BD5230865807C7ACC2C5D2AD4FECA27C4794896BB184F976DAAA919ADE074D5A0C3AEA31515EB5B45F9828D4AA1FBAF363B89181AB7096FA1983D8F06B9C25AE7640DDF6B2E7BDAF0B2EB11369DEFA51EF99F6DABFFB990AC9AC7227AC7089EC67CF5520247C5DA496DE24DE3A5C57CF6CA85F71A43DA5D05CC57CAA111D92D825E43313A14BA7C39A6BBD2C2CA614EA681AB5E68424453C08D1C07BC1CF9D82E9E34C49AB3D28F4FFAF4FD56E5FCEDBFF361ACBF017CF2D0088E8C77DF4D87ACF451C682B15C391CA23AADA96C121C75BD112F134D311A83888EB1EC274B8A774471CEBD9EE77B842BBABFB79606FF1CE9D4B6B645FDA26664BE181605A44983DF2627016D4D56FFF142A711ACFCFA181A98C32A11A0B1EC9E649907432795B590506A3E470F45A502AAB6297F706D6F507DC3164CA1899EFEEB0CC96A64C2165603B1AE754822B2B52059AABDADD83072D4759D42A54D932AB9498DC3E593AF38919C4CD76549EBBF440B3F1549B9BF69142FE488F9EA5C7F13F0C92ACECFAED0B9317485267FB403B70533229AC38D063F5597AB3E9B33944186BE861DCDF91136761572004F6A7BB0827ED194C548C541A606906AD67F99ED9681C74AAD23B44BF64A9ABCF1147DAA96CF887F1C11083F9CB531CF99D012A96522F084C3ADC99D5EC7F431F6D832771F67B1B0A42CDDE01FAFB3430D8C5FBBF72576EE3987497C427512212E6621EE374C7F5A1819A06C82C6E543DD9AC58E14F383E53342EDE0EEA74BBC541A0A7F95C232DC7A8F1449EBEF243225A5D2882F285EFE30BC461B7B1297A67026506E51BAC04BA3EBCB6C17DF4C9EEB2092FBC9F0175A616A1FBEF3CD0F38DE7AE581FFDD689B6ED7A01566D72116230F1F0200EF1A252D92859AA5C9D76D5831B6DBED53492BE8F5448AF7FBD5CE2E1F79D006321C9BACFD4B3A6FA5ED77F5CEA12737235CE17207A871CEC760258D7862EB5198B4152FC7ED780AFFC69299F77990E1935842D6A08AECEDAAFF326921D289BAFFB50732E4D175E5692BB9C3C92F514A996B63D015156EBB53C0A3D855FE7B14D57E8E225FFA928B45BBADA43CCB342FC4134243D4BEF81CD76938FD0C3F1C2E99EA5AE0D53AE3B2DB0F4BEB5BCB577F356616CB08BC7031CFACF4BE8D21AE41B19636AA42D1294012057D3D41460F6726DF7CD99242EA1424DCC2C6AADA88D3149F1ED92CD0E24242FB7D095A327C4D3B14CEE29DA8F455766C4893199417FEA4FF7554C1A3AAB598D174EEB9226460F728B68CC05BB9B5D4BFAAA6FB0072C7077AD92C9FA9A9FAACA4F201CC86D15EBE074805C2863FD22E0185D57CDEB28518AE6F166A7A02B6DD28F30D56D1DEB0295FACA2DAD353EE6B2EB1750D56EA089AF21805612DB56FD76C310E7D775E8CE918D94459D34114D44657BBC8A43106DA67FF0E41354BEC63D5C3740AC8B4177625CDDE09FAF644BD95483C68D240FC95ABDF47651EC7A9D22788F9150A34414DF6147FD06C46AFFE661820A5C4B9FD487FD144710F66D6BC1B98B6A93B44267CBC461000F4A76C7FB2339AEACD7F463E1EDF076BFC75CBFFFDB1B10066A0260F4FBBE990631D2C6731F07396D998398E15CBF32D8063658F07597C88BB9E53323B4EBDD9F80D10ED1517489C3E595B3F244E5035158699814DF18D5B568BD9B60536A3DEAC03FB1FB91D9F6A9F7E3FD931BF326EC8308AEF6DF2BD2117B01E1D7158ABB922EDD5AF85251449EC962469C2574735F78682BF997FC5FF4B96FD01433CA4387C02167B8C33CF3541C1A7AE36FF25577F0C440E525BB3FED92235F268E2A5BD563DF894A072CC42D3D283867F85416E39E5BC964276FB3F9921DC0350753835FD9B8CE6F0FBA76EB0D30B1B276EEBA2D978F329876AF9FFA486C7E6CEAD5AA5D111DED051860C3E32E7E31E460695518198E26FCFCE88ABCF85E35E0F8F9078733248808E49B104B050122B950D204FB25582B694EF1360723ABE54DDC8D573CC9467A1219360C0E5837681644D2BEA95E8D05208D259D6121D8B04AF633E00C31352390B02384BCD21C32C051F2F45EC8E5B65E8D74049042D004C6BF03A51935316005E3D235DCB9172526C824F0F7FE6B543AD78765858B0169532E6497B95A27049C863001A1C73962A0C89FEC406A25310E00AADE23C74BE2CDC8DDC998387A3738C14FD723A917DC8CC08D5657F0064D24DDE8E967713557FB8F3D5CF93E2F4D34871C647733AC9339679BA0FC89C3A3C03C951E75CF535F0A7C7BF0930B917DEFAAA58C67418F6EA56216C52B5FC0FC67333A1E1DBFC6698A4A35580D90A8E7D2CA226E3CA3D130054124FAE114C97CC8437020AF7CF05A1B6627046D88F23EC6829E466434C41F3949911FD120EF187ADD26C81CE9614D2C984151E6E9BB153D9A63211C0A5ABBF52B4F13D78F8987E1BDC0CFB4B2D82C5C9D0FF8F1155E49BF8E5F32C16CEEF14FE90BA92AEEBBDBB823A6A5FDCCF7EE885FFE81B2D0FB7CB18D770FF7B6F66603995036FECA00033547D0E4B9931672C2715C40F01B1F7B9CF6D887618B0C73C346B1809DFDB708CB42164E4D9EA6CDC1A5959796D9C659B203F4D49EF96F170EBEB0E33C7E4F600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: VQLIOS+PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /VQLIOS+PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid1567 putdup 34 /cid5424 putdup 35 /cid4457 putdup 36 /cid6535 putdup 37 /cid5330 putdup 38 /cid1674 putdup 39 /cid4913 putdup 40 /cid5425 putdup 41 /cid2906 putdup 42 /cid7339 putdup 43 /cid43466 putdup 44 /cid1153 putdup 45 /cid1777 putdup 46 /cid1932 putdup 47 /cid7167 putdup 48 /cid2388 putdup 49 /cid1154 putdup 50 /cid5482 putdup 51 /cid6950 putdup 52 /cid3373 putdup 53 /cid2855 putdup 54 /cid5364 putdup 55 /cid1844 putdup 56 /cid5565 putdup 57 /cid2068 putdup 58 /cid1246 putdup 59 /cid1692 putdup 60 /cid6418 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 30 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid1153 {(\001) 0 $SP} putdup /cid1154 {(\002) 0 $SP} putdup /cid1246 {(\003) 0 $SP} putdup /cid1567 {(\004) 0 $SP} putdup /cid1674 {(\005) 0 $SP} putdup /cid1692 {(\006) 0 $SP} putdup /cid1777 {(\007) 0 $SP} putdup /cid1844 {(\010) 0 $SP} putdup /cid1932 {(\011) 0 $SP} putdup /cid2068 {(\012) 0 $SP} putdup /cid2388 {(\013) 0 $SP} putdup /cid2855 {(\014) 0 $SP} putdup /cid2906 {(\015) 0 $SP} putdup /cid3373 {(\016) 0 $SP} putdup /cid4457 {(\017) 0 $SP} putdup /cid4913 {(\020) 0 $SP} putdup /cid5330 {(\021) 0 $SP} putdup /cid5364 {(\022) 0 $SP} putdup /cid5424 {(\023) 0 $SP} putdup /cid5425 {(\024) 0 $SP} putdup /cid5482 {(\025) 0 $SP} putdup /cid5565 {(\026) 0 $SP} putdup /cid6418 {(\027) 0 $SP} putdup /cid6535 {(\030) 0 $SP} putdup /cid6950 {(\031) 0 $SP} putdup /cid7167 {(\032) 0 $SP} putdup /cid7339 {(\033) 0 $SP} putdup /cid43466 {(\034) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/VQLIOS+PingFangSC-Regular cguidfix
/F1.1/VQLIOS+PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 0.50196081 0 sc
q
0 0 1130.3826 426.4379 rc
432.60928 424.07938 m
488.30374 424.07938 l
488.30374 368.38495 l
432.60928 368.38495 l
h
432.60928 424.07938 m
f
2 J
0.71561331 0.42861459 0.19386211 sc
1 0 0 -1 -301.28668 702.19067 cm
733.896 278.1113 m
789.59045 278.1113 l
789.59045 333.80576 l
733.896 333.80576 l
h
733.896 278.1113 m
S
0.40000001 0.80000001 1 sc
CM
488.1543 424.07938 m
543.84875 424.07938 l
543.84875 368.38495 l
488.1543 368.38495 l
h
488.1543 424.07938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
789.44098 278.1113 m
845.13544 278.1113 l
845.13544 333.80576 l
789.44098 333.80576 l
h
789.44098 278.1113 m
S
1 1 0 sc
CM
543.69928 424.07938 m
599.39374 424.07938 l
599.39374 368.38495 l
543.69928 368.38495 l
h
543.69928 424.07938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
844.98596 278.1113 m
900.68042 278.1113 l
900.68042 333.80576 l
844.98596 333.80576 l
h
844.98596 278.1113 m
S
0.40000001 0.80000001 1 sc
CM
599.24426 424.07938 m
654.93872 424.07938 l
654.93872 368.38495 l
599.24426 368.38495 l
h
599.24426 424.07938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
900.53101 278.1113 m
956.2254 278.1113 l
956.2254 333.80576 l
900.53101 333.80576 l
h
900.53101 278.1113 m
S
0 0.50196081 0 sc
CM
654.78931 424.07938 m
710.4837 424.07938 l
710.4837 368.38495 l
654.78931 368.38495 l
h
654.78931 424.07938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
956.07599 278.1113 m
1011.7704 278.1113 l
1011.7704 333.80576 l
956.07599 333.80576 l
h
956.07599 278.1113 m
S
1 0.50196081 0 sc
CM
432.60928 368.53439 m
488.30374 368.53439 l
488.30374 312.83994 l
432.60928 312.83994 l
h
432.60928 368.53439 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
733.896 333.65628 m
789.59045 333.65628 l
789.59045 389.35074 l
733.896 389.35074 l
h
733.896 333.65628 m
S
1 0.50196081 0 sc
CM
488.1543 368.53439 m
543.84875 368.53439 l
543.84875 312.83994 l
488.1543 312.83994 l
h
488.1543 368.53439 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
789.44098 333.65628 m
845.13544 333.65628 l
845.13544 389.35074 l
789.44098 389.35074 l
h
789.44098 333.65628 m
S
0.40000001 0.80000001 1 sc
CM
543.69928 368.53439 m
599.39374 368.53439 l
599.39374 312.83994 l
543.69928 312.83994 l
h
543.69928 368.53439 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
844.98596 333.65628 m
900.68042 333.65628 l
900.68042 389.35074 l
844.98596 389.35074 l
h
844.98596 333.65628 m
S
CM
599.24426 368.53439 m
654.93872 368.53439 l
654.93872 312.83994 l
599.24426 312.83994 l
h
599.24426 368.53439 m
f
1 0 0 -1 -301.28668 702.19067 cm
900.53101 333.65628 m
956.2254 333.65628 l
956.2254 389.35074 l
900.53101 389.35074 l
h
900.53101 333.65628 m
S
1 1 0 sc
CM
654.78931 368.53439 m
710.4837 368.53439 l
710.4837 312.83994 l
654.78931 312.83994 l
h
654.78931 368.53439 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
956.07599 333.65628 m
1011.7704 333.65628 l
1011.7704 389.35074 l
956.07599 389.35074 l
h
956.07599 333.65628 m
S
0.50196081 0 0 sc
CM
432.60928 312.98938 m
488.30374 312.98938 l
488.30374 257.29495 l
432.60928 257.29495 l
h
432.60928 312.98938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
733.896 389.20129 m
789.59045 389.20129 l
789.59045 444.89575 l
733.896 444.89575 l
h
733.896 389.20129 m
S
0.50196081 0.50196081 0 sc
CM
488.1543 312.98938 m
543.84875 312.98938 l
543.84875 257.29495 l
488.1543 257.29495 l
h
488.1543 312.98938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
789.44098 389.20129 m
845.13544 389.20129 l
845.13544 444.89575 l
789.44098 444.89575 l
h
789.44098 389.20129 m
S
1 0.43529412 0.81176472 sc
CM
543.69928 312.98938 m
599.39374 312.98938 l
599.39374 257.29495 l
543.69928 257.29495 l
h
543.69928 312.98938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
844.98596 389.20129 m
900.68042 389.20129 l
900.68042 444.89575 l
844.98596 444.89575 l
h
844.98596 389.20129 m
S
0.40000001 0.40000001 1 sc
CM
599.24426 312.98938 m
654.93872 312.98938 l
654.93872 257.29495 l
599.24426 257.29495 l
h
599.24426 312.98938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
900.53101 389.20129 m
956.2254 389.20129 l
956.2254 444.89575 l
900.53101 444.89575 l
h
900.53101 389.20129 m
S
0 0.50196081 0 sc
CM
654.78931 312.98938 m
710.4837 312.98938 l
710.4837 257.29495 l
654.78931 257.29495 l
h
654.78931 312.98938 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
956.07599 389.20129 m
1011.7704 389.20129 l
1011.7704 444.89575 l
956.07599 444.89575 l
h
956.07599 389.20129 m
S
0.50196081 0 0 sc
CM
432.60928 257.4444 m
488.30374 257.4444 l
488.30374 201.74994 l
432.60928 201.74994 l
h
432.60928 257.4444 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
733.896 444.74631 m
789.59045 444.74631 l
789.59045 500.44073 l
733.896 500.44073 l
h
733.896 444.74631 m
S
0.50196081 0.50196081 0 sc
CM
488.1543 257.4444 m
543.84875 257.4444 l
543.84875 201.74994 l
488.1543 201.74994 l
h
488.1543 257.4444 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
789.44098 444.74631 m
845.13544 444.74631 l
845.13544 500.44073 l
789.44098 500.44073 l
h
789.44098 444.74631 m
S
0.40000001 0.40000001 1 sc
CM
543.69928 257.4444 m
599.39374 257.4444 l
599.39374 201.74994 l
543.69928 201.74994 l
h
543.69928 257.4444 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
844.98596 444.74631 m
900.68042 444.74631 l
900.68042 500.44073 l
844.98596 500.44073 l
h
844.98596 444.74631 m
S
1 0 0.50196081 sc
CM
599.24426 257.4444 m
654.93872 257.4444 l
654.93872 201.74994 l
599.24426 201.74994 l
h
599.24426 257.4444 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
900.53101 444.74631 m
956.2254 444.74631 l
956.2254 500.44073 l
900.53101 500.44073 l
h
900.53101 444.74631 m
S
1 0 0.50196081 sc
CM
654.78931 257.4444 m
710.4837 257.4444 l
710.4837 201.74994 l
654.78931 201.74994 l
h
654.78931 257.4444 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
956.07599 444.74631 m
1011.7704 444.74631 l
1011.7704 500.44073 l
956.07599 500.44073 l
h
956.07599 444.74631 m
S
485.71915 527.77399 m
541.41364 527.77399 l
541.41364 583.46838 l
485.71915 583.46838 l
h
485.71915 527.77399 m
S
541.26416 527.77399 m
596.95862 527.77399 l
596.95862 583.46838 l
541.26416 583.46838 l
h
541.26416 527.77399 m
S
596.80914 527.77399 m
652.5036 527.77399 l
652.5036 583.46838 l
596.80914 583.46838 l
h
596.80914 527.77399 m
S
652.35419 527.77399 m
708.04858 527.77399 l
708.04858 583.46838 l
652.35419 583.46838 l
h
652.35419 527.77399 m
S
707.89917 527.77399 m
763.59363 527.77399 l
763.59363 583.46838 l
707.89917 583.46838 l
h
707.89917 527.77399 m
S
763.44415 527.77399 m
819.13861 527.77399 l
819.13861 583.46838 l
763.44415 583.46838 l
h
763.44415 527.77399 m
S
818.98914 527.77399 m
874.68359 527.77399 l
874.68359 583.46838 l
818.98914 583.46838 l
h
818.98914 527.77399 m
S
874.53418 527.77399 m
930.22858 527.77399 l
930.22858 583.46838 l
874.53418 583.46838 l
h
874.53418 527.77399 m
S
930.07916 527.77399 m
985.77362 527.77399 l
985.77362 583.46838 l
930.07916 583.46838 l
h
930.07916 527.77399 m
S
985.62415 527.77399 m
1041.3186 527.77399 l
1041.3186 583.46838 l
985.62415 583.46838 l
h
985.62415 527.77399 m
S
1041.1692 527.77399 m
1096.8636 527.77399 l
1096.8636 583.46838 l
1041.1692 583.46838 l
h
1041.1692 527.77399 m
S
1096.7141 527.77399 m
1152.4086 527.77399 l
1152.4086 583.46838 l
1096.7141 583.46838 l
h
1096.7141 527.77399 m
S
1152.2592 527.77399 m
1207.9536 527.77399 l
1207.9536 583.46838 l
1152.2592 583.46838 l
h
1152.2592 527.77399 m
S
1207.8042 527.77399 m
1263.4987 527.77399 l
1263.4987 583.46838 l
1207.8042 583.46838 l
h
1207.8042 527.77399 m
S
1263.3491 527.77399 m
1319.0436 527.77399 l
1319.0436 583.46838 l
1263.3491 583.46838 l
h
1263.3491 527.77399 m
S
1318.8942 527.77399 m
1374.5886 527.77399 l
1374.5886 583.46838 l
1318.8942 583.46838 l
h
1318.8942 527.77399 m
S
1374.4392 527.77399 m
1430.1335 527.77399 l
1430.1335 583.46838 l
1374.4392 583.46838 l
h
1374.4392 527.77399 m
S
764.00562 638.10431 m
819.70001 638.10431 l
819.70001 693.79877 l
764.00562 693.79877 l
h
764.00562 638.10431 m
S
819.5506 638.10431 m
875.24506 638.10431 l
875.24506 693.79877 l
819.5506 693.79877 l
h
819.5506 638.10431 m
S
875.09558 638.10431 m
930.79004 638.10431 l
930.79004 693.79877 l
875.09558 693.79877 l
h
875.09558 638.10431 m
S
930.64056 638.10431 m
986.33502 638.10431 l
986.33502 693.79877 l
930.64056 693.79877 l
h
930.64056 638.10431 m
S
986.18561 638.10431 m
1041.88 638.10431 l
1041.88 693.79877 l
986.18561 693.79877 l
h
986.18561 638.10431 m
S
1041.7306 638.10431 m
1097.425 638.10431 l
1097.425 693.79877 l
1041.7306 693.79877 l
h
1041.7306 638.10431 m
S
1097.2756 638.10431 m
1152.9701 638.10431 l
1152.9701 693.79877 l
1097.2756 693.79877 l
h
1097.2756 638.10431 m
S
1152.8206 638.10431 m
1208.515 638.10431 l
1208.515 693.79877 l
1152.8206 693.79877 l
h
1152.8206 638.10431 m
S
1208.3656 638.10431 m
1264.0601 638.10431 l
1264.0601 693.79877 l
1208.3656 693.79877 l
h
1208.3656 638.10431 m
S
1263.9106 638.10431 m
1319.605 638.10431 l
1319.605 693.79877 l
1263.9106 693.79877 l
h
1263.9106 638.10431 m
S
1 0.50196081 0 sc
CM
128.50328 174.52122 m
184.19772 174.52122 l
184.19772 118.82677 l
128.50328 118.82677 l
h
128.50328 174.52122 m
f
0.71561331 0.42861459 0.19386211 sc
1 0 0 -1 -301.28668 702.19067 cm
429.78998 527.66949 m
485.48441 527.66949 l
485.48441 583.36389 l
429.78998 583.36389 l
h
429.78998 527.66949 m
S
1 0.50196081 0 sc
CM
72.866142 174.3716 m
128.56059 174.3716 l
128.56059 118.67715 l
72.866142 118.67715 l
h
72.866142 174.3716 m
f
0.71561331 0.42861459 0.19386211 sc
1 0 0 -1 -301.28668 702.19067 cm
374.15283 527.81909 m
429.84729 527.81909 l
429.84729 583.51355 l
374.15283 583.51355 l
h
374.15283 527.81909 m
S
1 0.50196081 0 sc
CM
17.229012 174.22198 m
72.923454 174.22198 l
72.923454 118.52753 l
17.229012 118.52753 l
h
17.229012 174.22198 m
f
0.71561331 0.42861459 0.19386211 sc
1 0 0 -1 -301.28668 702.19067 cm
318.51572 527.96869 m
374.21014 527.96869 l
374.21014 583.66315 l
318.51572 583.66315 l
h
318.51572 527.96869 m
S
1 0.50196081 0 sc
CM
462.54907 64.295021 m
518.24353 64.295021 l
518.24353 8.6005793 l
462.54907 8.6005793 l
h
462.54907 64.295021 m
f
0.71561331 0.42861459 0.19386211 sc
1 0 0 -1 -301.28668 702.19067 cm
763.83575 637.89569 m
819.53021 637.89569 l
819.53021 693.59009 l
763.83575 693.59009 l
h
763.83575 637.89569 m
S
0.50196081 0 0 sc
CM
185.03006 174.36636 m
240.7245 174.36636 l
240.7245 118.67193 l
185.03006 118.67193 l
h
185.03006 174.36636 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
486.31674 527.82434 m
542.01117 527.82434 l
542.01117 583.51874 l
486.31674 583.51874 l
h
486.31674 527.82434 m
S
0.50196081 0 0 sc
CM
240.70892 174.52213 m
296.40335 174.52213 l
296.40335 118.82767 l
240.70892 118.82767 l
h
240.70892 174.52213 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
541.99561 527.66858 m
597.69006 527.66858 l
597.69006 583.36304 l
541.99561 583.36304 l
h
541.99561 527.66858 m
S
0.50196081 0 0 sc
CM
519.31305 63.79958 m
575.00745 63.79958 l
575.00745 8.1051331 l
519.31305 8.1051331 l
h
519.31305 63.79958 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
820.59973 638.39111 m
876.29419 638.39111 l
876.29419 694.08557 l
820.59973 694.08557 l
h
820.59973 638.39111 m
S
0.40000001 0.80000001 1 sc
CM
296.77478 174.06848 m
352.46921 174.06848 l
352.46921 118.37404 l
296.77478 118.37404 l
h
296.77478 174.06848 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
598.06146 528.12219 m
653.75592 528.12219 l
653.75592 583.81665 l
598.06146 583.81665 l
h
598.06146 528.12219 m
S
0.40000001 0.80000001 1 sc
CM
351.3923 174.06848 m
407.08676 174.06848 l
407.08676 118.37404 l
351.3923 118.37404 l
h
351.3923 174.06848 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
652.67902 528.12219 m
708.37341 528.12219 l
708.37341 583.81665 l
652.67902 583.81665 l
h
652.67902 528.12219 m
S
0.40000001 0.80000001 1 sc
CM
406.69464 174.317 m
462.3891 174.317 l
462.3891 118.62256 l
406.69464 118.62256 l
h
406.69464 174.317 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
707.98132 527.87366 m
763.67578 527.87366 l
763.67578 583.56812 l
707.98132 583.56812 l
h
707.98132 527.87366 m
S
0.40000001 0.80000001 1 sc
CM
575.34314 64.265785 m
631.03754 64.265785 l
631.03754 8.5713396 l
575.34314 8.5713396 l
h
575.34314 64.265785 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
876.62982 637.92493 m
932.32428 637.92493 l
932.32428 693.61932 l
876.62982 693.61932 l
h
876.62982 637.92493 m
S
0.50196081 0.50196081 0 sc
CM
462.45645 174.57648 m
518.15088 174.57648 l
518.15088 118.88203 l
462.45645 118.88203 l
h
462.45645 174.57648 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
763.74316 527.6142 m
819.43756 527.6142 l
819.43756 583.30865 l
763.74316 583.30865 l
h
763.74316 527.6142 m
S
0.50196081 0.50196081 0 sc
CM
518.08344 174.32289 m
573.77789 174.32289 l
573.77789 118.62844 l
518.08344 118.62844 l
h
518.08344 174.32289 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
819.37012 527.8678 m
875.06458 527.8678 l
875.06458 583.56226 l
819.37012 583.56226 l
h
819.37012 527.8678 m
S
0.50196081 0.50196081 0 sc
CM
631.56195 63.716297 m
687.25641 63.716297 l
687.25641 8.0218515 l
631.56195 8.0218515 l
h
631.56195 63.716297 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
932.84863 638.47437 m
988.54309 638.47437 l
988.54309 694.16882 l
932.84863 694.16882 l
h
932.84863 638.47437 m
S
1 0.43529412 0.81176472 sc
CM
573.81635 174.03448 m
629.51074 174.03448 l
629.51074 118.34004 l
573.81635 118.34004 l
h
573.81635 174.03448 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
875.10303 528.15619 m
930.79749 528.15619 l
930.79749 583.85065 l
875.10303 583.85065 l
h
875.10303 528.15619 m
S
1 0.43529412 0.81176472 sc
CM
687.68286 63.478615 m
743.37732 63.478615 l
743.37732 7.7841706 l
687.68286 7.7841706 l
h
687.68286 63.478615 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
988.9696 638.7121 m
1044.6641 638.7121 l
1044.6641 694.40649 l
988.9696 694.40649 l
h
988.9696 638.7121 m
S
0.40000001 0.40000001 1 sc
CM
629.61023 174.21149 m
685.30469 174.21149 l
685.30469 118.51704 l
629.61023 118.51704 l
h
629.61023 174.21149 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
930.89691 527.97919 m
986.59137 527.97919 l
986.59137 583.67365 l
930.89691 583.67365 l
h
930.89691 527.97919 m
S
0.40000001 0.40000001 1 sc
CM
685.3548 173.67039 m
741.04919 173.67039 l
741.04919 117.97595 l
685.3548 117.97595 l
h
685.3548 173.67039 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
986.64148 528.52026 m
1042.3359 528.52026 l
1042.3359 584.21472 l
986.64148 584.21472 l
h
986.64148 528.52026 m
S
0.40000001 0.40000001 1 sc
CM
742.20746 63.631859 m
797.90192 63.631859 l
797.90192 7.9374137 l
742.20746 7.9374137 l
h
742.20746 63.631859 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1043.4941 638.55884 m
1099.1886 638.55884 l
1099.1886 694.2533 l
1043.4941 694.2533 l
h
1043.4941 638.55884 m
S
1 0 0.50196081 sc
CM
740.70819 174.00607 m
796.40259 174.00607 l
796.40259 118.31163 l
740.70819 118.31163 l
h
740.70819 174.00607 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1041.9949 528.18463 m
1097.6893 528.18463 l
1097.6893 583.87903 l
1041.9949 583.87903 l
h
1041.9949 528.18463 m
S
1 0 0.50196081 sc
CM
795.72229 174.18011 m
851.41669 174.18011 l
851.41669 118.48567 l
795.72229 118.48567 l
h
795.72229 174.18011 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1097.0089 528.01056 m
1152.7034 528.01056 l
1152.7034 583.70502 l
1097.0089 583.70502 l
h
1097.0089 528.01056 m
S
1 0 0.50196081 sc
CM
797.8717 63.895596 m
853.5661 63.895596 l
853.5661 8.2011499 l
797.8717 8.2011499 l
h
797.8717 63.895596 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1099.1583 638.2951 m
1154.8528 638.2951 l
1154.8528 693.98956 l
1099.1583 693.98956 l
h
1099.1583 638.2951 m
S
1 1 0 sc
CM
850.92346 173.61658 m
906.61792 173.61658 l
906.61792 117.92213 l
850.92346 117.92213 l
h
850.92346 173.61658 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1152.2102 528.5741 m
1207.9047 528.5741 l
1207.9047 584.26855 l
1152.2102 584.26855 l
h
1152.2102 528.5741 m
S
1 1 0 sc
CM
907.013 173.68918 m
962.7074 173.68918 l
962.7074 117.99474 l
907.013 117.99474 l
h
907.013 173.68918 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1208.2997 528.50153 m
1263.9941 528.50153 l
1263.9941 584.19592 l
1208.2997 584.19592 l
h
1208.2997 528.50153 m
S
1 1 0 sc
CM
853.74133 64.119789 m
909.43579 64.119789 l
909.43579 8.4253426 l
853.74133 8.4253426 l
h
853.74133 64.119789 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1155.0281 638.07092 m
1210.7224 638.07092 l
1210.7224 693.76532 l
1155.0281 693.76532 l
h
1155.0281 638.07092 m
S
0 0.50196081 0 sc
CM
962.68372 173.68199 m
1018.3782 173.68199 l
1018.3782 117.98755 l
962.68372 117.98755 l
h
962.68372 173.68199 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1263.9705 528.50867 m
1319.6649 528.50867 l
1319.6649 584.20312 l
1263.9705 584.20312 l
h
1263.9705 528.50867 m
S
0 0.50196081 0 sc
CM
1017.7029 173.45535 m
1073.3973 173.45535 l
1073.3973 117.76092 l
1017.7029 117.76092 l
h
1017.7029 173.45535 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1318.9896 528.73535 m
1374.6841 528.73535 l
1374.6841 584.42975 l
1318.9896 584.42975 l
h
1318.9896 528.73535 m
S
0 0.50196081 0 sc
CM
909.68994 64.142097 m
965.3844 64.142097 l
965.3844 8.4476509 l
909.68994 8.4476509 l
h
909.68994 64.142097 m
f
0 0 0 sc
1 0 0 -1 -301.28668 702.19067 cm
1210.9767 638.04858 m
1266.6711 638.04858 l
1266.6711 693.74304 l
1210.9767 693.74304 l
h
1210.9767 638.04858 m
S
CM
1074.1882 173.6673 m
1129.8826 173.6673 l
1129.8826 117.97285 l
1074.1882 117.97285 l
h
1074.1882 173.6673 m
f
1 0 0 -1 -301.28668 702.19067 cm
1375.4749 528.52338 m
1431.1693 528.52338 l
1431.1693 584.21783 l
1375.4749 584.21783 l
h
1375.4749 528.52338 m
S
CM
966.41107 63.806267 m
1022.1055 63.806267 l
1022.1055 8.1118212 l
966.41107 8.1118212 l
h
966.41107 63.806267 m
f
1 0 0 -1 -301.28668 702.19067 cm
1267.6978 638.3844 m
1323.3922 638.3844 l
1323.3922 694.07886 l
1267.6978 694.07886 l
h
1267.6978 638.3844 m
S
0 i
/F1.1[ 36 0 0 -36 0 0]sf
322.85098 313.75281 m
(!"#$%&'\(\)*+)[ 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 0.000000 ] xS
376.85098 363.75281 m
(,-./0*+1)[ 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 0.000000 ] xS
327.80222 510.99176 m
(2345'6\(\)*+)[ 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 0.000000 ] xS
321.42798 681.37195 m
(78'9:\(\)*+;<)[ 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 36.000000 0.000000 ] xS
0.60000002 i
460.60501 588.22864 m
460.60501 630.84735 l
794.54742 630.84735 l
794.54742 632.11658 l
S
CM
493.26074 62.556538 m
490.5246 70.074081 l
495.99692 70.074081 l
h
493.26074 62.556538 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
794.54742 639.63416 m
791.81128 632.11658 l
797.28357 632.11658 l
h
794.54742 639.63416 m
S
1 w
568.01257 589.12805 m
568.01257 623.97797 l
850.65082 623.97797 l
850.65082 628.4054 l
S
CM
549.36414 66.267746 m
546.62793 73.785286 l
552.10028 73.785286 l
h
549.36414 66.267746 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
850.65082 635.92291 m
847.91461 628.4054 l
853.38696 628.4054 l
h
850.65082 635.92291 m
S
1 w
1347.106 588.07019 m
1347.106 608.46259 l
1238.8019 608.46259 l
1238.8019 631.11578 l
S
CM
937.5152 63.557388 m
934.77905 71.074928 l
940.2514 71.074928 l
h
937.5152 63.557388 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1238.8019 638.6333 m
1236.0658 631.11578 l
1241.5381 631.11578 l
h
1238.8019 638.6333 m
S
1 w
737.07532 585.12634 m
737.07532 619.07227 l
905.23889 619.07227 l
905.23889 629.07037 l
S
CM
603.95221 65.602753 m
601.21606 73.120293 l
606.68835 73.120293 l
h
603.95221 65.602753 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
905.23889 636.58795 m
902.50275 629.07037 l
907.9751 629.07037 l
h
905.23889 636.58795 m
S
1 w
846.51569 581.18799 m
846.51569 613.81982 l
962.88843 613.81982 l
962.88843 630.95453 l
S
CM
661.60175 63.718597 m
658.86554 71.236137 l
664.33789 71.236137 l
h
661.60175 63.718597 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
962.88843 638.47211 m
960.15228 630.95453 l
965.62457 630.95453 l
h
962.88843 638.47211 m
S
1 w
903.39386 588.00281 m
903.39386 608.65479 l
1016.2068 608.65479 l
1016.2068 628.85883 l
S
CM
714.92017 65.814339 m
712.18402 73.331879 l
717.65631 73.331879 l
h
714.92017 65.814339 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1016.2068 636.37634 m
1013.4707 628.85883 l
1018.943 628.85883 l
h
1016.2068 636.37634 m
S
1 w
1015.4219 584.99164 m
1015.4219 604.55249 l
1071.7305 604.55249 l
1071.7305 628.49945 l
S
CM
770.44379 66.173706 m
767.70764 73.691246 l
773.17993 73.691246 l
h
770.44379 66.173706 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1071.7305 636.01697 m
1068.9943 628.49945 l
1074.4667 628.49945 l
h
1071.7305 636.01697 m
S
1 w
1126.6825 586.98456 m
1126.6825 608.59674 l
1126.6663 608.59674 l
1126.6663 629.20807 l
S
CM
825.37958 65.46505 m
822.64343 72.98259 l
828.11578 72.98259 l
h
825.37958 65.46505 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1126.6663 636.72565 m
1123.9302 629.20807 l
1129.4025 629.20807 l
h
1126.6663 636.72565 m
S
1 w
1237.1271 583.55334 m
1237.1271 597.9411 l
1182.0138 597.9411 l
1182.0138 627.50195 l
S
CM
880.72705 67.171196 m
877.99091 74.688736 l
883.4632 74.688736 l
h
880.72705 67.171196 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1182.0138 635.01947 m
1179.2776 627.50195 l
1184.7499 627.50195 l
h
1182.0138 635.01947 m
S
1 w
1407.1016 588.07019 m
1407.1016 616.72803 l
1295.1757 616.72803 l
1295.1757 631.16949 l
S
CM
993.88892 63.503651 m
991.15277 71.021194 l
996.62512 71.021194 l
h
993.88892 63.503651 m
f
0.25 w
1 0 0 -1 -301.28668 702.19067 cm
1295.1757 638.68701 m
1292.4395 631.16949 l
1297.9117 631.16949 l
h
1295.1757 638.68701 m
S
ep
end
%%Trailer
%%EOF
